Q.1)  Finding Missing Number in an array binary search
 
     public class MissingNumberUsingBinarySearch {

	public static void main(String[] args) {
		
		int arr[] = {0,1,2,3,4,6,7,8,};
		
		int find = findMissingNumber(arr);
		System.out.println(find);
				
		}

	private static int findMissingNumber(int[] arr) {
		
		int start = 1;
		int end = arr.length-1;
		
		while(start<=end)
		{
			int mid = start + (end-start)/2;
			
			if(mid == 0)
			{
				return mid;
			}
			
			if(arr[mid]!=mid && arr[mid-1]==mid-1)
			{
				return mid;
			}
		
			else if(arr[mid]==mid)
			{
				start = mid +1;
			}
			else
			{
				end = mid -1;
			}
		}
		return arr.length;
	}
	

}
------------------------------------------------****-------------------------------------------------------
Q.2)  https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/"

    class Solution {
    public int[] twoSum(int[] numbers, int target) {
        int start = 0, end = numbers.length - 1;
        int[] index = new int[2];
        while (start <= end){
            int sum = numbers[start] + numbers[end];
            if (sum < target){
                start++;
            } else if (sum > target){
                end--;
            } else {
                index[0] = start + 1;
                index[1] = end + 1;
                break;
            }
        }
        return index;
    }
}

------------------------------------------------****-------------------------------------------------------