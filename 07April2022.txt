 1. Print the matrix in the spiral form
              a[][] =  
              {1,2,3,4}
              {5,6,7,8},
              {9,10,11,12},
              {13,14,15,16}

       Output:-

              1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10


 Solution :-
           package datastructure;
           public class SprialMatrixInGeekster
           {

	 public static void main(String[] args) {
		int a[][] = {{1,2,3,4},{5,6,7,8},{9,10,11,12},{13,14,15,16}};

		printSpiral(a);
	      }

	private static void printSpiral(int[][] a) {

		int rowSize = a.length;
		int colSize = a[0].length;

		int top = 0; // top row
		int bottom = rowSize -1; // last row

		int left = 0 ;// first column
		int right = colSize -1;

		int dir = 1;
		// Dir1 -> Dir 2-> Dir3-> Di4 -> Dir1->Dir2->Dir3->Dir4
		while(top<=bottom && left<=right)
		{
			if(dir ==1)
			{
				//print top row

				for(int i =left;i<=right;i++)
				{
					//row number is always constant, only column varies
					System.out.print(a[top][i]+ " ");
				}

				top++;
				dir = 2;
			}

			else if(dir ==2)
			{
				//print right column
				for(int i =top;i<=bottom;i++)
				{
					System.out.print(a[i][right]+ " ");
				}

				right --;

				dir = 3;
			}

			else if(dir ==3)
			{
				//print bottom row
				for(int i = right;i>=left;i--)
				{
					System.out.print(a[bottom][i]+" ");
				}

				bottom --;
				dir = 4;
			}

			else if(dir == 4)
			{
				// Print left column

				for(int i =bottom;i>=top;i--)
				{
					System.out.print(a[i][left]+ " ");
				}

				left++;
				dir = 1;
			}


		}


	}

}
--------------------------------------------------------------------------------------------------------------------------------

2. Given a boolean matrix mat[M][N] of size M X N, modify it such that if a matrix cell mat[i][j] is 1 (or true) then make all the cells of ith row and jth column as 1.
 Example 1:-

      The matrix
      1 0
      0 0
     should be changed to following
      1 1
      1 0

  Example 2:-

     The matrix
     0 0 0
     0 0 1
   should be changed to following
     0 0 1
     1 1 1

Example 3:-

     The matrix
     1 0 0 1
     0 0 1 0
     0 0 0 0
  should be changed to following
    1 1 1 1
    1 1 1 1
    1 0 1 1



package DSAPractics;

public class BooleanMatrix {
	public static void main(String args[] ){
        
        int mat[][] = {{1,0},{0,0}};
                 
        System.out.println(" given Matrix :");
        printMatrix(mat);
             
        modifyMatrix(mat);
             
        System.out.println("Matrix After Modification :");
        printMatrix(mat);
             
    }
 public static void modifyMatrix(int mat[][]){
        
        boolean row_flag = false;
        boolean col_flag = false;
                 
        for (int i = 0; i < mat.length; i++ ){
                for (int j = 0; j < mat[0].length; j++){
                        if (i == 0 && mat[i][j] == 1)
                            row_flag = true;
                         
                        if (j == 0 && mat[i][j] == 1)
                            col_flag = true;
                         
                        if (mat[i][j] == 1){
                             
                            mat[0][j] = 1;
                            mat[i][0] = 1;
                        }
                         
                    }
                }
        
        for (int i = 1; i < mat.length; i ++){
                for (int j = 1; j < mat[0].length; j ++){
                         
                    if (mat[0][j] == 1 || mat[i][0] == 1){
                            mat[i][j] = 1;
                        }
                    }
                }
                 
          if (row_flag == true){
            for (int i = 0; i < mat[0].length; i++){
                        mat[0][i] = 1;
                    }
                }
                 
        if (col_flag == true){
            for (int i = 0; i < mat.length; i ++){
                        mat[i][0] = 1;
            }
        }
    }
             
    public static void printMatrix(int mat[][]){
        for (int i = 0; i < mat.length; i ++){
            for (int j = 0; j < mat[0].length; j ++){
                System.out.print( mat[i][j] );
            }
                System.out.println("");
        }
    }
}
             
  
     

=--------------------------------------------------------------------------------------------------------------------------------------------